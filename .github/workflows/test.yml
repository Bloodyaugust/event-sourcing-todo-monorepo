name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todo_app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:7.4.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        ports:
          - 2181:2181

      kafka:
        image: confluentinc/cp-kafka:7.4.0
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
        ports:
          - 9092:9092
          - 29092:29092
        options: >-
          --health-cmd "kafka-topics --bootstrap-server localhost:9092 --list"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: event-sourcing-todo-api/package-lock.json

      - name: Install dependencies
        run: |
          cd event-sourcing-todo-api
          npm ci

      - name: Create .env file
        run: |
          cd event-sourcing-todo-api
          cat > .env << EOF
          KAFKA_BROKER_ENDPOINT=localhost:29092
          POSTGRES_PORT=5432
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=postgres
          POSTGRES_DB=todo_app
          EOF

      - name: Wait for services to be ready
        run: |
          # Wait for PostgreSQL
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

          # Wait for Kafka
          until docker run --rm --network host confluentinc/cp-kafka:7.4.0 kafka-topics --bootstrap-server localhost:29092 --list; do
            echo "Waiting for Kafka..."
            sleep 5
          done

      - name: Run database migrations
        run: |
          cd event-sourcing-todo-api
          npm run typeorm:migrate

      - name: Run unit tests
        run: |
          cd event-sourcing-todo-api
          npm run test

      - name: Run e2e tests
        run: |
          cd event-sourcing-todo-api
          npm run test:e2e

      - name: Run test coverage
        run: |
          cd event-sourcing-todo-api
          npm run test:cov

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./event-sourcing-todo-api/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
